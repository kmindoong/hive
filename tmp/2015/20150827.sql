

SELECT CUST_LIFESTG_CL_CD
     , (SELECT CUST_LIFESTG_CL_NM FROM VM_CUST_LIFESTG_CL AA WHERE A.CUST_LIFESTG_CL_CD = AA.CUST_LIFESTG_CL_CD) AS CUST_LIFESTG_CL_NM
     , DWH_CL_CD
     , WAT_CNT
     , ROW_NUMBER () OVER (PARTITION BY CUST_LIFESTG_CL_CD, DWH_CL_CD ORDER BY WAT_CNT DESC) CNT_ORDER
FROM
(
SELECT A.CUST_LIFESTG_CL_CD
     , B.DWH_CL_CD
     , SUM(B.WAT_CNT) AS WAT_CNT
FROM
(SELECT /*+ parallel(16) */ MBL_CUST_NUM
     , (CASE WHEN SEX_CD = 'M' THEN
             CASE WHEN AGE > 0   AND AGE < 20 THEN 'M0119'
                  WHEN AGE >= 20 AND AGE < 27 THEN 'M2026'
                  WHEN AGE >= 27 AND AGE < 32 THEN 'M2731'
                  WHEN AGE >= 32 AND AGE < 34 THEN 'M3233'
                  WHEN AGE >= 34 AND AGE < 40 THEN 'M3439'
                  WHEN AGE >= 40 AND AGE < 46 THEN 'M4045'
                  WHEN AGE >= 46 AND AGE < 49 THEN 'M4648'
                  WHEN AGE >= 49 AND AGE < 52 THEN 'M4951'
                  WHEN AGE >= 52 AND AGE < 63 THEN 'M5262'
                  WHEN AGE >= 63 AND AGE < 74 THEN 'M6373'
                  WHEN AGE >= 74              THEN 'M7400'
                  ELSE '#'
              END
             WHEN SEX_CD = 'F' THEN
             CASE WHEN AGE > 0   AND AGE < 20 THEN 'F0119'
                  WHEN AGE >= 20 AND AGE < 25 THEN 'F2024'
                  WHEN AGE >= 25 AND AGE < 29 THEN 'F2528'
                  WHEN AGE >= 29 AND AGE < 32 THEN 'F2931'
                  WHEN AGE >= 32 AND AGE < 38 THEN 'F3237'
                  WHEN AGE >= 38 AND AGE < 44 THEN 'F3843'
                  WHEN AGE >= 44 AND AGE < 47 THEN 'F4446'
                  WHEN AGE >= 47 AND AGE < 50 THEN 'F4749'
                  WHEN AGE >= 50 AND AGE < 60 THEN 'F5059'
                  WHEN AGE >= 60 AND AGE < 70 THEN 'F6069'
                  WHEN AGE >= 70              THEN 'F7000'
                  ELSE '#'
              END
             ELSE '#'
         END)   AS CUST_LIFESTG_CL_CD    -- 고객Life-stage구분코드
  FROM (SELECT /*+ parallel(16) */ MBL_CUST_NUM, MAX(SEX_CD) AS SEX_CD, MAX(AGE) AS AGE 
          FROM CC_MBL_CUST_SVC_PRST_MONTH
         WHERE STRD_YM BETWEEN '201507' AND '201509'
         GROUP BY MBL_CUST_NUM
       )
 ) A
 JOIN 
 (SELECT MBL_CUST_NUM
       , CASE WHEN HDAY_YN = 'N' AND WAT_TMS_RNG_CL_CD = 'WH01' THEN 'DWH01'
            WHEN HDAY_YN = 'N' AND WAT_TMS_RNG_CL_CD = 'WH02' THEN 'DWH02'
            WHEN HDAY_YN = 'N' AND WAT_TMS_RNG_CL_CD = 'WH03' THEN 'DWH03'
            WHEN HDAY_YN = 'N' AND WAT_TMS_RNG_CL_CD = 'WH04' THEN 'DWH04'
            WHEN HDAY_YN = 'N' AND WAT_TMS_RNG_CL_CD = 'WH05' THEN 'DWH05'
            WHEN HDAY_YN = 'N' AND WAT_TMS_RNG_CL_CD = 'WH06' THEN 'DWH06'
            WHEN HDAY_YN = 'N' AND WAT_TMS_RNG_CL_CD = 'WH07' THEN 'DWH07'
            WHEN HDAY_YN = 'Y' AND WAT_TMS_RNG_CL_CD = 'WH01' THEN 'DWH08'
            WHEN HDAY_YN = 'Y' AND WAT_TMS_RNG_CL_CD = 'WH02' THEN 'DWH09'
            WHEN HDAY_YN = 'Y' AND WAT_TMS_RNG_CL_CD = 'WH03' THEN 'DWH10'
            WHEN HDAY_YN = 'Y' AND WAT_TMS_RNG_CL_CD = 'WH04' THEN 'DWH11'
            WHEN HDAY_YN = 'Y' AND WAT_TMS_RNG_CL_CD = 'WH05' THEN 'DWH12'
            WHEN HDAY_YN = 'Y' AND WAT_TMS_RNG_CL_CD = 'WH06' THEN 'DWH13'
            WHEN HDAY_YN = 'Y' AND WAT_TMS_RNG_CL_CD = 'WH07' THEN 'DWH14'
            END AS DWH_CL_CD 
        , WAT_CNT
    FROM
         (SELECT A.MBL_CUST_NUM, A.STRD_DT, B.HDAY_YN, A.WAT_CNT
               , CASE WHEN WAT_TMS_RNG_CD IN ('H07', 'H08', 'H09') THEN 'WH01'
                            WHEN WAT_TMS_RNG_CD IN ('H10', 'H11', 'H12') THEN 'WH02'
                            WHEN WAT_TMS_RNG_CD IN ('H13', 'H14', 'H15') THEN 'WH03'
                            WHEN WAT_TMS_RNG_CD IN ('H16', 'H17', 'H18', 'H19') THEN 'WH04'
                            WHEN WAT_TMS_RNG_CD IN ('H20', 'H21', 'H22') THEN 'WH05'
                            WHEN WAT_TMS_RNG_CD IN ('H23', 'H00', 'H01') THEN 'WH06'
                            WHEN WAT_TMS_RNG_CD IN ('H02', 'H03', 'H04', 'H05', 'H06') THEN 'WH07'
                            END AS WAT_TMS_RNG_CL_CD                                    --시청시간대구분코드
            FROM CT_MBL_VOD_WAT_PRST_DAY A
            JOIN CO_STRD_DT B
              ON A.STRD_DT = B.STRD_DT
            WHERE A.STRD_DT BETWEEN '20150701' AND '20150930'
         ) A
 ) B
 ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
 GROUP BY A.CUST_LIFESTG_CL_CD
     , B.DWH_CL_CD
) A
 ;

SELECT *
FROM (
SELECT CUST_LIFESTG_CL_CD
     , (SELECT CUST_LIFESTG_CL_NM FROM VM_CUST_LIFESTG_CL AA WHERE A.CUST_LIFESTG_CL_CD = AA.CUST_LIFESTG_CL_CD) AS CUST_LIFESTG_CL_NM
     , (SELECT CTG_CL_NM FROM VM_CTG_CL AA WHERE A.CTG_CL_CD = AA.CTG_CL_CD) AS CTG_CL_NM
     , WAT_CNT
     , ROW_NUMBER () OVER (PARTITION BY CUST_LIFESTG_CL_CD ORDER BY WAT_CNT DESC) CNT_ORDER
FROM
(
SELECT A.CUST_LIFESTG_CL_CD
     , B.CTG_CL_CD
     , SUM(B.WAT_CNT) AS WAT_CNT
FROM
(SELECT /*+ parallel(16) */ MBL_CUST_NUM
     , (CASE WHEN SEX_CD = 'M' THEN
             CASE WHEN AGE > 0   AND AGE < 20 THEN 'M0119'
                  WHEN AGE >= 20 AND AGE < 27 THEN 'M2026'
                  WHEN AGE >= 27 AND AGE < 32 THEN 'M2731'
                  WHEN AGE >= 32 AND AGE < 34 THEN 'M3233'
                  WHEN AGE >= 34 AND AGE < 40 THEN 'M3439'
                  WHEN AGE >= 40 AND AGE < 46 THEN 'M4045'
                  WHEN AGE >= 46 AND AGE < 49 THEN 'M4648'
                  WHEN AGE >= 49 AND AGE < 52 THEN 'M4951'
                  WHEN AGE >= 52 AND AGE < 63 THEN 'M5262'
                  WHEN AGE >= 63 AND AGE < 74 THEN 'M6373'
                  WHEN AGE >= 74              THEN 'M7400'
                  ELSE '#'
              END
             WHEN SEX_CD = 'F' THEN
             CASE WHEN AGE > 0   AND AGE < 20 THEN 'F0119'
                  WHEN AGE >= 20 AND AGE < 25 THEN 'F2024'
                  WHEN AGE >= 25 AND AGE < 29 THEN 'F2528'
                  WHEN AGE >= 29 AND AGE < 32 THEN 'F2931'
                  WHEN AGE >= 32 AND AGE < 38 THEN 'F3237'
                  WHEN AGE >= 38 AND AGE < 44 THEN 'F3843'
                  WHEN AGE >= 44 AND AGE < 47 THEN 'F4446'
                  WHEN AGE >= 47 AND AGE < 50 THEN 'F4749'
                  WHEN AGE >= 50 AND AGE < 60 THEN 'F5059'
                  WHEN AGE >= 60 AND AGE < 70 THEN 'F6069'
                  WHEN AGE >= 70              THEN 'F7000'
                  ELSE '#'
              END
             ELSE '#'
         END)   AS CUST_LIFESTG_CL_CD    -- 고객Life-stage구분코드
  FROM (SELECT /*+ parallel(16) */ MBL_CUST_NUM, MAX(SEX_CD) AS SEX_CD, MAX(AGE) AS AGE 
          FROM CC_MBL_CUST_SVC_PRST_MONTH
         WHERE STRD_YM BETWEEN '201507' AND '201509'
         GROUP BY MBL_CUST_NUM
       )
 ) A
 JOIN 
  (SELECT MBL_CUST_NUM
       , CTG_CL_CD, SUM(WAT_CNT) AS WAT_CNT
    FROM CT_MBL_VOD_WAT_PRST_DAY
   WHERE STRD_DT BETWEEN '20150701' AND '20150930'
   GROUP BY MBL_CUST_NUM
       , CTG_CL_CD
 ) B
 ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
  GROUP BY A.CUST_LIFESTG_CL_CD
     , B.CTG_CL_CD
) A
) --WHERE CNT_ORDER < 4 ;
;

SELECT * FROM CT_MBL_VOD_WAT_PRST_DAY;



-- 가입경과개월수별 기본월정액가입
SELECT MBL_SCRB_PASSMTH_CNT
     , CASE WHEN PYFR_MBR_CL_CD = 'T9F' THEN 'FREE' ELSE 'COST' END AS GUBUN
     , COUNT(*)
FROM CC_MBL_CUST_SVC_PRST_MONTH PARTITION (PT_201509)
GROUP BY MBL_SCRB_PASSMTH_CNT
       , CASE WHEN PYFR_MBR_CL_CD = 'T9F' THEN 'FREE' ELSE 'COST' END;

-- 가입경과개월수별 VOD/실시간시청
SELECT MBL_SCRB_PASSMTH_CNT
     , CASE WHEN PYFR_MBR_CL_CD = 'T9F' THEN 'FREE' ELSE 'COST' END AS GUBUN
     , COUNT(*)
FROM CC_MBL_CUST_SVC_PRST_MONTH PARTITION (PT_201509)
GROUP BY MBL_SCRB_PASSMTH_CNT
       , CASE WHEN PYFR_MBR_CL_CD = 'T9F' THEN 'FREE' ELSE 'COST' END;


SELECT (CASE WHEN MBL_SCRB_PASSMTH_CNT > 1 THEN 'ING' ELSE 'NEW' END) AS GUBUN
     , (CASE WHEN BUY_AMT > 0 THEN 'COST' ELSE 'FREE' END) AS COST
     , COUNT(*)
FROM BK_MBL_SEG_20151012_2
GROUP BY CASE WHEN MBL_SCRB_PASSMTH_CNT > 1 THEN 'ING' ELSE 'NEW' END
       , CASE WHEN BUY_AMT > 0 THEN 'COST' ELSE 'FREE' END;


SELECT * FROM BK_MBL_SEG_20151012_2;

SELECT COST_YN, PPM_YN, WAT_YN, COUNT(*), SUM(PROD_PRC), SUM(BUY_AMT)
FROM BK_MBL_SEG_20151012_2
--WHERE COST_YN = 'N'
GROUP BY COST_YN, PPM_YN, WAT_YN
;

SELECT COST_YN, COUNT(*), SUM(PROD_PRC), SUM(BUY_AMT)
FROM BK_MBL_SEG_20151012_2
GROUP BY COST_YN;

SELECT BUY_RNG_CD, SUM(BUY_AMT)
FROM (
SELECT MBL_CUST_NUM
     , COST_YN
     , PPM_YN
     , WAT_YN
     , PROD_PRC
     , BUY_AMT
     , TO_NUMBER(CONCAT(CEIL(BUY_AMT/1000), '000')) AS BUY_RNG_CD
FROM BK_MBL_SEG_20151012_2
WHERE COST_YN = 'Y'
) GROUP BY BUY_RNG_CD
;

SELECT BUY_RNG_CD, SUM(BUY_AMT), COUNT(*)
FROM (
SELECT MBL_CUST_NUM
     , COST_YN
     , PPM_YN
     , WAT_YN
     , PROD_PRC
     , BUY_AMT
     , CASE WHEN BUY_AMT > 20000 THEN 21000
            ELSE TO_NUMBER(CONCAT(CEIL(BUY_AMT/1000), '000')) 
        END AS BUY_RNG_CD
FROM BK_MBL_SEG_20151012_2
WHERE COST_YN = 'Y'
) GROUP BY BUY_RNG_CD
;

SELECT GUBUN
     , CASE WHEN BUY_RNG_CD = 1000 THEN 1000
            WHEN BUY_RNG_CD > 1000 AND BUY_RNG_CD < 6000 THEN 2000
            WHEN BUY_RNG_CD > 5000 AND BUY_RNG_CD < 10000 THEN 6000
            WHEN BUY_RNG_CD > 9000 AND BUY_RNG_CD < 16000 THEN 10000
            WHEN BUY_RNG_CD > 15000 THEN 16000
         END AS BUY_RNG_CD
     , SUM(BUY_AMT), COUNT(*)
FROM (
SELECT A.MBL_CUST_NUM, A.GUBUN, CASE WHEN B.BUY_AMT > 20000 THEN 21000
            ELSE TO_NUMBER(CONCAT(CEIL(B.BUY_AMT/1000), '000')) 
        END AS BUY_RNG_CD, B.BUY_AMT FROM BK_MBL_SEG_20151012_4 A
JOIN BK_MBL_SEG_20151012_5 B
ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
) GROUP BY GUBUN, CASE WHEN BUY_RNG_CD = 1000 THEN 1000
            WHEN BUY_RNG_CD > 1000 AND BUY_RNG_CD < 6000 THEN 2000
            WHEN BUY_RNG_CD > 5000 AND BUY_RNG_CD < 10000 THEN 6000
            WHEN BUY_RNG_CD > 9000 AND BUY_RNG_CD < 16000 THEN 10000
            WHEN BUY_RNG_CD > 15000 THEN 16000
         END
;


DROP TABLE BK_MBL_SEG_20151012_5 PURGE;
CREATE TABLE BK_MBL_SEG_20151012_5 AS
SELECT A.MBL_CUST_NUM
     , A.MBL_SCRB_PASSMTH_CNT
     --, ROUND(SUM(B.PROD_PRC+C.PROD_PRC+D.PROD_PRC)/(CASE WHEN A.MBL_SCRB_PASSMTH_CNT > 3 THEN 3 ELSE A.MBL_SCRB_PASSMTH_CNT END))  AS PROD_PRC
     --, ROUND(SUM(B.DC_AMT+C.DC_AMT+D.DC_AMT)/(CASE WHEN A.MBL_SCRB_PASSMTH_CNT > 3 THEN 3 ELSE A.MBL_SCRB_PASSMTH_CNT END)) AS DC_AMT
     , ROUND(SUM(B.BUY_AMT+NVL(C.BUY_AMT,0)+NVL(D.BUY_AMT,0))/(CASE WHEN A.MBL_SCRB_PASSMTH_CNT > 3 THEN 3 ELSE A.MBL_SCRB_PASSMTH_CNT END)) AS BUY_AMT
     , CASE WHEN SUM(B.BUY_AMT+NVL(C.BUY_AMT,0)+NVL(D.BUY_AMT,0))/(CASE WHEN A.MBL_SCRB_PASSMTH_CNT > 3 THEN 3 ELSE A.MBL_SCRB_PASSMTH_CNT END) > 0 THEN 'Y' ELSE 'N' END AS COST_YN
  FROM CC_MBL_CUST_SVC_PRST_MONTH PARTITION (PT_201509) A
  JOIN (SELECT MBL_CUST_NUM
             , SUM(DC_AMT) AS DC_AMT
             , SUM(BUY_AMT) AS BUY_AMT
             , SUM(PROD_PRC) AS PROD_PRC
             , SUM(OCB_DC_AMT) AS OCB_DC_AMT
             , SUM(TPT_DC_AMT) AS TPT_DC_AMT
             , SUM(BPT_DC_AMT) AS BPT_DC_AMT
             , SUM(COPN_DC_AMT) AS COPN_DC_AMT
          FROM CT_MBL_CNTNTS_BUY_DTL
         WHERE STRD_DT BETWEEN '20150901' AND '20150930'
           --AND BUY_AMT > 0
         GROUP BY MBL_CUST_NUM
       ) B
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
  LEFT OUTER JOIN (SELECT MBL_CUST_NUM
             , SUM(DC_AMT) AS DC_AMT
             , SUM(BUY_AMT) AS BUY_AMT
             , SUM(PROD_PRC) AS PROD_PRC
             , SUM(OCB_DC_AMT) AS OCB_DC_AMT
             , SUM(TPT_DC_AMT) AS TPT_DC_AMT
             , SUM(BPT_DC_AMT) AS BPT_DC_AMT
             , SUM(COPN_DC_AMT) AS COPN_DC_AMT
          FROM CT_MBL_CNTNTS_BUY_DTL
         WHERE STRD_DT BETWEEN '20150801' AND '20150831'
         GROUP BY MBL_CUST_NUM
       ) C
    ON A.MBL_CUST_NUM = C.MBL_CUST_NUM
  LEFT OUTER JOIN (SELECT MBL_CUST_NUM
             , SUM(DC_AMT) AS DC_AMT
             , SUM(BUY_AMT) AS BUY_AMT
             , SUM(PROD_PRC) AS PROD_PRC
             , SUM(OCB_DC_AMT) AS OCB_DC_AMT
             , SUM(TPT_DC_AMT) AS TPT_DC_AMT
             , SUM(BPT_DC_AMT) AS BPT_DC_AMT
             , SUM(COPN_DC_AMT) AS COPN_DC_AMT
          FROM CT_MBL_CNTNTS_BUY_DTL
         WHERE STRD_DT BETWEEN '20150701' AND '20150730'
         GROUP BY MBL_CUST_NUM
       ) D
    ON A.MBL_CUST_NUM = D.MBL_CUST_NUM
 GROUP BY A.MBL_CUST_NUM
        , A.MBL_SCRB_PASSMTH_CNT
;

SELECT * FROM BK_MBL_SEG_20151012_5 WHERE COST_YN = 'Y';

SELECT BUY_RNG_CD, ROUND(SUM(BUY_AMT)), COUNT(*)
FROM (
SELECT A.MBL_CUST_NUM
     , COST_YN
     , A.BUY_AMT
     , CASE WHEN A.BUY_AMT > 20000 THEN 21000
            ELSE TO_NUMBER(CONCAT(CEIL(A.BUY_AMT/1000), '000')) 
        END AS BUY_RNG_CD
FROM BK_MBL_SEG_20151012_5 A
JOIN BK_MBL_SEG_20151012_4 B
ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
WHERE COST_YN = 'Y'
) GROUP BY BUY_RNG_CD
;


SELECT UP_20000
     , SUM(BUY_AMT)
  FROM (
SELECT MBL_CUST_NUM
     , CASE WHEN BUY_AMT >= 20000 THEN 1 ELSE 0 END AS UP_20000
     , BUY_AMT
FROM BK_MBL_SEG_20151012_2
WHERE COST_YN = 'Y'
) GROUP BY UP_20000
;

SELECT SUM(
FROM BK_MBL_SEG_20151012_3
WHERE COST_YN = 'Y'
;

MBL_PROD_TYP_CD	MBL_PROD_TYP_NM
#	기타
1	1
110	단품
120	PPS
130	VOD 월정액
180	채널(실시간) 월정액
181	월정액
;

SELECT CASE WHEN MBL_PROD_TYP_CD IN ('181','130','180')THEN 'PPM'
              ELSE 'PPV'
          END AS PPM_PPV
     , SUM(BUY_AMT)
     , COUNT(*)
FROM BK_MBL_SEG_20151012_3
WHERE COST_YN = 'Y'
GROUP BY CASE WHEN MBL_PROD_TYP_CD IN ('181','130','180')THEN 'PPM'
              ELSE 'PPV'
          END
          ;

SELECT * FROM VM_MBL_PROD_TYP;

SELECT GUBUN, COUNT(*),SUM(BUY_AMT) FROM BK_MBL_SEG_20151012_4 GROUP BY GUBUN;

SELECT * FROM BK_MBL_SEG_20151012_2;

CREATE TABLE BK_MBL_SEG_20151012_4 AS
SELECT MBL_CUST_NUM
     , MAX(PPM_YN)+MAX(PPV_YN) AS GUBUN
     , SUM(BUY_AMT) AS BUY_AMT
FROM (
SELECT MBL_CUST_NUM
     , CASE WHEN MBL_PROD_TYP_CD IN ('181','130','180') THEN 2
              ELSE 0
          END AS PPM_YN
     , CASE WHEN MBL_PROD_TYP_CD NOT IN ('181','130','180') THEN 1
              ELSE 0
          END AS PPV_YN
     , SUM(BUY_AMT) AS BUY_AMT
     , COUNT(*)
  FROM CT_MBL_CNTNTS_BUY_DTL
 WHERE STRD_DT BETWEEN '20150901' AND '20150930'
   AND BUY_AMT > 0
 GROUP BY MBL_CUST_NUM, CASE WHEN MBL_PROD_TYP_CD IN ('181','130','180') THEN 2
              ELSE 0
          END,
          CASE WHEN MBL_PROD_TYP_CD NOT IN ('181','130','180') THEN 1
              ELSE 0
          END
) GROUP BY MBL_CUST_NUM
;

SELECT *  FROM CT_MBL_CNTNTS_BUY_DTL
 WHERE STRD_DT BETWEEN '20150901' AND '20150930' AND MBL_CUST_NUM IN ('U007806869',
'U007515894', 'U002324214');

SELECT CASE WHEN MBL_PROD_TYP_CD IN ('181','130','180')THEN 'PPM'
              ELSE 'PPV'
          END AS PPM_PPV
     , SUM(BUY_AMT)
     , COUNT(*)
  FROM CT_MBL_CNTNTS_BUY_DTL
 WHERE STRD_DT BETWEEN '20150901' AND '20150930'
   AND BUY_AMT > 0
 GROUP BY CASE WHEN MBL_PROD_TYP_CD IN ('181','130','180')THEN 'PPM'
              ELSE 'PPV'
          END;

SELECT * FROM VM_MBL_PROD_TYP;

SELECT BUY_AMT
     , COUNT(*)
FROM BK_MBL_SEG_20151012_2
WHERE COST_YN = 'Y'
GROUP BY BUY_AMT;

DROP TABLE BK_MBL_SEG_20151012_2 PURGE;
CREATE TABLE BK_MBL_SEG_20151012_3 AS
SELECT A.MBL_CUST_NUM
     , B.MBL_PROD_TYP_CD
     , CASE WHEN B.MBL_CUST_NUM IS NOT NULL AND B.BUY_AMT > 0 THEN 'Y' ELSE 'N' END AS COST_YN
     , CASE WHEN A.PYFR_MBR_CL_CD = 'T9F' THEN 'N' ELSE 'Y' END AS PPM_YN
     , CASE WHEN C.MBL_CUST_NUM IS NOT NULL THEN 'Y' ELSE 'N' END AS WAT_YN
     , B.PROD_PRC
     , B.BUY_AMT
  FROM CC_MBL_CUST_SVC_PRST_MONTH PARTITION (PT_201509) A
  LEFT OUTER JOIN (SELECT MBL_CUST_NUM
             , MBL_PROD_TYP_CD
             , SUM(DC_AMT) AS DC_AMT
             , SUM(BUY_AMT) AS BUY_AMT
             , SUM(PROD_PRC) AS PROD_PRC
             , SUM(OCB_DC_AMT) AS OCB_DC_AMT
             , SUM(TPT_DC_AMT) AS TPT_DC_AMT
             , SUM(BPT_DC_AMT) AS BPT_DC_AMT
             , SUM(COPN_DC_AMT) AS COPN_DC_AMT
          FROM CT_MBL_CNTNTS_BUY_DTL
         WHERE STRD_DT BETWEEN '20150901' AND '20150930'
         GROUP BY MBL_CUST_NUM, MBL_PROD_TYP_CD
       ) B
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
   LEFT OUTER JOIN (SELECT MBL_CUST_NUM FROM CT_MBL_RLTMWAT_PRST_MONTH PARTITION (PT_201509)
                    UNION SELECT MBL_CUST_NUM FROM CT_MBL_VOD_WAT_PRST_MONTH PARTITION (PT_201509)
                   ) C
    ON A.MBL_CUST_NUM = C.MBL_CUST_NUM
;


SELECT MBL_SCRB_PASSMTH_CNT, COUNT(*)
FROM CC_MBL_CUST_SVC_PRST_MONTH PARTITION (PT_201509)
GROUP BY MBL_SCRB_PASSMTH_CNT;

DESC CC_MBL_CUST_SVC_PRST_MONTH;
DESC CT_MBL_CNTNTS_BUY_DTL;

SELECT MBL_CUST_NUM, M1_BUY_AMT FROM BK_MBL_SEG_20151012 WHERE M1_BUY_AMT > 0;
SELECT MBL_CUST_NUM, M1_BUY_AMT FROM BK_MBL_SEG_20151012_1 WHERE M1_BUY_AMT > 0;
SELECT M1_BUY_AMT, COUNT(*) FROM BK_MBL_SEG_20151012 WHERE M1_BUY_AMT > 0 GROUP BY M1_BUY_AMT;
SELECT M1_BUY_AMT, COUNT(*) FROM BK_MBL_SEG_20151012_1 WHERE M1_BUY_AMT > 0 GROUP BY M1_BUY_AMT;

SELECT MBL_CUST_NUM, M1_BUY_AMT FROM BK_MBL_SEG_20151012_1 WHERE M1_BUY_AMT > 0;


-- 1개월 비교 7434185
SELECT CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END AS GUBUN
     , COUNT(*)
FROM (
SELECT A.MBL_CUST_NUM
     , CASE WHEN A.M1_BUY_AMT >= 40000 THEN '1'
            WHEN A.M1_BUY_AMT >= 20000 AND A.M1_BUY_AMT < 40000 THEN '2'
            WHEN A.M1_BUY_AMT >= 10000 AND A.M1_BUY_AMT < 20000 THEN '3'
            WHEN A.M1_BUY_AMT >= 5000 AND A.M1_BUY_AMT < 10000 THEN '4'
            WHEN A.M1_BUY_AMT >= 2500 AND A.M1_BUY_AMT < 5000 THEN '5'
            WHEN A.M1_BUY_AMT >= 1200 AND A.M1_BUY_AMT < 2500 THEN '6'
            WHEN A.M1_BUY_AMT >= 700 AND A.M1_BUY_AMT < 1200 THEN '7'
            ELSE '8'
        END AS M_GUBUN
     , CASE WHEN B.M1_BUY_AMT >= 40000 THEN '1'
            WHEN B.M1_BUY_AMT >= 20000 AND B.M1_BUY_AMT < 40000 THEN '2'
            WHEN B.M1_BUY_AMT >= 10000 AND B.M1_BUY_AMT < 20000 THEN '3'
            WHEN B.M1_BUY_AMT >= 5000 AND B.M1_BUY_AMT < 10000 THEN '4'
            WHEN B.M1_BUY_AMT >= 2500 AND B.M1_BUY_AMT < 5000 THEN '5'
            WHEN B.M1_BUY_AMT >= 1200 AND B.M1_BUY_AMT < 2500 THEN '6'
            WHEN B.M1_BUY_AMT >= 700 AND B.M1_BUY_AMT < 1200 THEN '7'
            ELSE '8'
        END AS M1_GUBUN
  FROM BK_MBL_SEG_20151012 A -- 201504 ~ 201509
  JOIN BK_MBL_SEG_20151012_1 B -- 201503 ~ 201508
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
  WHERE A.MBL_SCRB_PASSMTH_CNT > 1
    AND A.M1_BUY_AMT > 0 AND B.M1_BUY_AMT > 0
)
GROUP BY CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END
;


-- 2개월 비교
SELECT CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END AS GUBUN
     , COUNT(*)
FROM (
SELECT A.MBL_CUST_NUM
     , CASE WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 >= 40000 THEN '1'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 >= 20000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 < 40000 THEN '2'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 >= 10000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 < 20000 THEN '3'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 >= 5000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 < 10000 THEN '4'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 >= 2500 AND (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 < 5000 THEN '5'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 >= 1200 AND (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 < 2500 THEN '6'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 >= 700 AND (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 < 1200 THEN '7'
            ELSE '8'
        END AS M_GUBUN
     , CASE WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 >= 40000 THEN '1'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 >= 20000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 < 40000 THEN '2'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 >= 10000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 < 20000 THEN '3'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 >= 5000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 < 10000 THEN '4'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 >= 2500 AND (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 < 5000 THEN '5'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 >= 1200 AND (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 < 2500 THEN '6'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 >= 700 AND (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 < 1200 THEN '7'
            ELSE '8'
        END AS M1_GUBUN
  FROM BK_MBL_SEG_20151012 A -- 201504 ~ 201509
  JOIN BK_MBL_SEG_20151012_1 B -- 201503 ~ 201508
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
  WHERE A.MBL_SCRB_PASSMTH_CNT > 2
    AND (A.M1_BUY_AMT + A.M2_BUY_AMT)/2 > 0 AND (B.M1_BUY_AMT + B.M2_BUY_AMT)/2 > 0
)
GROUP BY CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END
;


-- 3개월 비교
SELECT CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END AS GUBUN
     , COUNT(*)
FROM (
SELECT A.MBL_CUST_NUM
     , CASE WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 >= 40000 THEN '1'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 >= 20000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 < 40000 THEN '2'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 >= 10000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 < 20000 THEN '3'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 >= 5000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 < 10000 THEN '4'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 >= 2500 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 < 5000 THEN '5'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 >= 1200 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 < 2500 THEN '6'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 >= 700 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 < 1200 THEN '7'
            ELSE '8'
        END AS M_GUBUN
     , CASE WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 >= 40000 THEN '1'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 >= 20000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 < 40000 THEN '2'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 >= 10000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 < 20000 THEN '3'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 >= 5000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 < 10000 THEN '4'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 >= 2500 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 < 5000 THEN '5'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 >= 1200 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 < 2500 THEN '6'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 >= 700 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 < 1200 THEN '7'
            ELSE '8'
        END AS M1_GUBUN
  FROM BK_MBL_SEG_20151012 A -- 201504 ~ 201509
  JOIN BK_MBL_SEG_20151012_1 B -- 201503 ~ 201508
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
  WHERE A.MBL_SCRB_PASSMTH_CNT > 3
    AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT)/3 > 0 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT)/3 > 0
)
GROUP BY CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END
;

-- 4개월 비교
SELECT CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END AS GUBUN
     , COUNT(*)
FROM (
SELECT A.MBL_CUST_NUM
     , CASE WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 >= 40000 THEN '1'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 >= 20000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 < 40000 THEN '2'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 >= 10000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 < 20000 THEN '3'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 >= 5000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 < 10000 THEN '4'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 >= 2500 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 < 5000 THEN '5'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 >= 1200 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 < 2500 THEN '6'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 >= 700 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 < 1200 THEN '7'
            ELSE '8'
        END AS M_GUBUN
     , CASE WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 >= 40000 THEN '1'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 >= 20000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 < 40000 THEN '2'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 >= 10000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 < 20000 THEN '3'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 >= 5000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 < 10000 THEN '4'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 >= 2500 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 < 5000 THEN '5'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 >= 1200 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 < 2500 THEN '6'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 >= 700 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 < 1200 THEN '7'
            ELSE '8'
        END AS M1_GUBUN
  FROM BK_MBL_SEG_20151012 A -- 201504 ~ 201509
  JOIN BK_MBL_SEG_20151012_1 B -- 201503 ~ 201508
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
  WHERE A.MBL_SCRB_PASSMTH_CNT > 4
    AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT)/4 > 0
    AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT)/4 >0
)
GROUP BY CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END
;

-- 5개월 비교
SELECT CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END AS GUBUN
     , COUNT(*)
FROM (
SELECT A.MBL_CUST_NUM
     , CASE WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 >= 40000 THEN '1'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 >= 20000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 < 40000 THEN '2'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 >= 10000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 < 20000 THEN '3'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 >= 5000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 < 10000 THEN '4'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 >= 2500 AND (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 < 5000 THEN '5'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 >= 1200 AND (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 < 2500 THEN '6'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 >= 700 AND (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 < 1200 THEN '7'
            ELSE '8'
        END AS M_GUBUN
     , CASE WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 >= 40000 THEN '1'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 >= 20000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 < 40000 THEN '2'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 >= 10000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 < 20000 THEN '3'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 >= 5000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 < 10000 THEN '4'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 >= 2500 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 < 5000 THEN '5'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 >= 1200 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 < 2500 THEN '6'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 >= 700 AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 < 1200 THEN '7'
            ELSE '8'
        END AS M1_GUBUN
  FROM BK_MBL_SEG_20151012 A -- 201504 ~ 201509
  JOIN BK_MBL_SEG_20151012_1 B -- 201503 ~ 201508
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
  WHERE A.MBL_SCRB_PASSMTH_CNT > 5
    AND (A.M1_BUY_AMT + A.M2_BUY_AMT +A.M3_BUY_AMT+ A.M4_BUY_AMT+A.M5_BUY_AMT)/5 > 0
    AND (B.M1_BUY_AMT + B.M2_BUY_AMT +B.M3_BUY_AMT+ B.M4_BUY_AMT+B.M5_BUY_AMT)/5 > 0
)
GROUP BY CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END
;


-- 6개월 비교
SELECT CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END AS GUBUN
     , COUNT(*)
FROM (
SELECT A.MBL_CUST_NUM
     , CASE WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 >= 40000 THEN '1'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 >= 20000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 < 40000 THEN '2'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 >= 10000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 < 20000 THEN '3'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 >= 5000 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 < 10000 THEN '4'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 >= 2500 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 < 5000 THEN '5'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 >= 1200 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 < 2500 THEN '6'
            WHEN (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 >= 700 AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 < 1200 THEN '7'
            ELSE '8'
        END AS M_GUBUN
     , CASE WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 >= 40000 THEN '1'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 >= 20000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 < 40000 THEN '2'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 >= 10000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 < 20000 THEN '3'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 >= 5000 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 < 10000 THEN '4'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 >= 2500 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 < 5000 THEN '5'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 >= 1200 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 < 2500 THEN '6'
            WHEN (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 >= 700 AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 < 1200 THEN '7'
            ELSE '8'
        END AS M1_GUBUN
  FROM BK_MBL_SEG_20151012 A -- 201504 ~ 201509
  JOIN BK_MBL_SEG_20151012_1 B -- 201503 ~ 201508
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
  WHERE A.MBL_SCRB_PASSMTH_CNT > 6
    AND (A.M1_BUY_AMT + A.M2_BUY_AMT + A.M3_BUY_AMT+ A.M4_BUY_AMT+ A.M5_BUY_AMT+ A.M6_BUY_AMT)/6 > 0
    AND (B.M1_BUY_AMT + B.M2_BUY_AMT + B.M3_BUY_AMT+ B.M4_BUY_AMT+ B.M5_BUY_AMT+ B.M6_BUY_AMT)/6 > 0
)
GROUP BY CASE WHEN M_GUBUN=M1_GUBUN THEN 'EQ' ELSE 'NEQ' END
;


SELECT A.M1_BUY_AMT, B.M1_BUY_AMT
FROM BK_MBL_SEG_20151012 A -- 201504 ~ 201509
  JOIN BK_MBL_SEG_20151012_1 B -- 201503 ~ 201508
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
;

DROP TABLE BK_MBL_SEG_20151012_1 PURGE;
CREATE TABLE BK_MBL_SEG_20151012_1 AS
SELECT A.MBL_CUST_NUM
     , A.MBL_SCRB_PASSMTH_CNT
     , SUM(CASE WHEN B.STRD_YM = '201503' THEN PROD_PRC ELSE 0 END) AS M6_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201504' THEN PROD_PRC ELSE 0 END) AS M5_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201505' THEN PROD_PRC ELSE 0 END) AS M4_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201506' THEN PROD_PRC ELSE 0 END) AS M3_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201507' THEN PROD_PRC ELSE 0 END) AS M2_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201508' THEN PROD_PRC ELSE 0 END) AS M1_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201503' THEN DC_AMT ELSE 0 END) AS M6_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201504' THEN DC_AMT ELSE 0 END) AS M5_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201505' THEN DC_AMT ELSE 0 END) AS M4_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201506' THEN DC_AMT ELSE 0 END) AS M3_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201507' THEN DC_AMT ELSE 0 END) AS M2_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201508' THEN DC_AMT ELSE 0 END) AS M1_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201503' THEN BUY_AMT ELSE 0 END) AS M6_BUY_AMT
     , SUM(CASE WHEN B.STRD_YM = '201504' THEN BUY_AMT ELSE 0 END) AS M5_BUY_AMT
     , SUM(CASE WHEN B.STRD_YM = '201505' THEN BUY_AMT ELSE 0 END) AS M4_BUY_AMT
     , SUM(CASE WHEN B.STRD_YM = '201506' THEN BUY_AMT ELSE 0 END) AS M3_BUY_AMT
     , SUM(CASE WHEN B.STRD_YM = '201507' THEN BUY_AMT ELSE 0 END) AS M2_BUY_AMT
     , SUM(CASE WHEN B.STRD_YM = '201508' THEN BUY_AMT ELSE 0 END) AS M1_BUY_AMT
  FROM (SELECT * 
          FROM CC_MBL_CUST_SVC_PRST_MONTH PARTITION (PT_201509)
       )A
  LEFT OUTER JOIN (SELECT SUBSTR(STRD_DT, 1, 6) AS STRD_YM, MBL_CUST_NUM
                        , SUM(PROD_PRC) AS PROD_PRC
                        , SUM(DC_AMT) AS DC_AMT
                        , SUM(BUY_AMT) AS BUY_AMT
                     FROM CT_MBL_CNTNTS_BUY_DTL 
                    WHERE STRD_DT BETWEEN '20150301' AND '20150831'
                    GROUP BY SUBSTR(STRD_DT, 1, 6), MBL_CUST_NUM
                   ) B
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
 GROUP BY A.MBL_CUST_NUM
        , A.MBL_SCRB_PASSMTH_CNT
;

DROP TABLE BK_MBL_SEG_20151012;
CREATE TABLE BK_MBL_SEG_20151012 AS
SELECT A.MBL_CUST_NUM
     , A.MBL_SCRB_PASSMTH_CNT
     , SUM(CASE WHEN B.STRD_YM = '201504' THEN PROD_PRC ELSE 0 END) AS M6_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201505' THEN PROD_PRC ELSE 0 END) AS M5_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201506' THEN PROD_PRC ELSE 0 END) AS M4_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201507' THEN PROD_PRC ELSE 0 END) AS M3_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201508' THEN PROD_PRC ELSE 0 END) AS M2_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201509' THEN PROD_PRC ELSE 0 END) AS M1_PROD_PRC
     , SUM(CASE WHEN B.STRD_YM = '201504' THEN DC_AMT ELSE 0 END) AS M6_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201505' THEN DC_AMT ELSE 0 END) AS M5_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201506' THEN DC_AMT ELSE 0 END) AS M4_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201507' THEN DC_AMT ELSE 0 END) AS M3_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201508' THEN DC_AMT ELSE 0 END) AS M2_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201509' THEN DC_AMT ELSE 0 END) AS M1_DC_AMT
     , SUM(CASE WHEN B.STRD_YM = '201504' THEN BUY_AMT ELSE 0 END) AS M6_BUY_AMT
     , SUM(CASE WHEN B.STRD_YM = '201505' THEN BUY_AMT ELSE 0 END) AS M5_BUY_AMT
     , SUM(CASE WHEN B.STRD_YM = '201506' THEN BUY_AMT ELSE 0 END) AS M4_BUY_AMT
     , SUM(CASE WHEN B.STRD_YM = '201507' THEN BUY_AMT ELSE 0 END) AS M3_BUY_AMT
     , SUM(CASE WHEN B.STRD_YM = '201508' THEN BUY_AMT ELSE 0 END) AS M2_BUY_AMT
     , SUM(CASE WHEN B.STRD_YM = '201509' THEN BUY_AMT ELSE 0 END) AS M1_BUY_AMT
  FROM CC_MBL_CUST_SVC_PRST_MONTH PARTITION (PT_201509) A
  LEFT OUTER JOIN (SELECT SUBSTR(STRD_DT, 1, 6) AS STRD_YM, MBL_CUST_NUM
                        , SUM(PROD_PRC) AS PROD_PRC
                        , SUM(DC_AMT) AS DC_AMT
                        , SUM(BUY_AMT) AS BUY_AMT
                     FROM CT_MBL_CNTNTS_BUY_DTL 
                    WHERE STRD_DT BETWEEN '20150401' AND '20150930'
                    GROUP BY SUBSTR(STRD_DT, 1, 6), MBL_CUST_NUM
                   ) B
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM
 GROUP BY A.MBL_CUST_NUM
 , A.MBL_SCRB_PASSMTH_CNT
;

;

DESC CC_MBL_CUST_SVC_PRST_MONTH;
DESC CT_MBL_CNTNTS_BUY_DTL;
--
DESC BK_MJ_MBL_VOD_CNT_1;
DESC BK_MJ_MBL_RLTM_CNT_1;

-- 3개월
SELECT * FROM BK_MBL_CUST_SEG_20150914;
-- 6개월
SELECT * FROM BK_MBL_CUST_SEG_20150914_1;
-- 12개월
SELECT * FROM BK_MBL_CUST_SEG_20150914_2;


SELECT * FROM
(
SELECT CUST_LIFESTG_CL_CD
     , CUST_LIFESTG_CL_NM
     , VCG_LVL1_CD_NM
     , ROW_NUMBER () OVER (PARTITION BY CUST_LIFESTG_CL_NM ORDER BY WAT_CNT_M DESC) RNK_MBL
     , WAT_CNT_M
FROM (
SELECT CUST_LIFESTG_CL_CD
     , CUST_LIFESTG_CL_NM
     , VCG_LVL1_CD_NM
     , SUM(WAT_CNT_M_6) AS WAT_CNT_M
FROM (
SELECT CUST_LIFESTG_CL_CD
     , (SELECT CUST_LIFESTG_CL_NM FROM VM_CUST_LIFESTG_CL AA WHERE A.CUST_LIFESTG_CL_CD = AA.CUST_LIFESTG_CL_CD) AS CUST_LIFESTG_CL_NM
     , (SELECT VCG_LVL1_CD_NM FROM CT_VCG_MST AA WHERE A.VCG_CD = AA.VCG_CD) AS VCG_LVL1_CD_NM
     --, COUNT(DISTINCT MBL_CUST_NUM) AS MBL_CNT
     , WAT_CNT_M_6
  FROM BK_MJ_MBL_VOD_CNT_2 A
)
WHERE VCG_LVL1_CD_NM IS NOT NULL
GROUP BY CUST_LIFESTG_CL_CD
         , CUST_LIFESTG_CL_NM
         , VCG_LVL1_CD_NM
)
)
WHERE RNK_MBL < 6
ORDER BY CUST_LIFESTG_CL_CD, RNK_MBL
;


CREATE TABLE BK_MJ_MBL_VOD_CNT_2 AS
SELECT SEG.MBL_CUST_NUM
     , B.CUST_LIFESTG_CL_CD
     , VOD.VCG_CD
     , VOD.WAT_CNT_M_12
     , VOD.WAT_CNT_M_6
     , VOD.WAT_CNT_M_3
  FROM BK_YS_MBL_CUST_SEG SEG
  LEFT OUTER JOIN 
       (SELECT /*+ parallel(16) */ A.MBL_CUST_NUM
             , B.VCG_CD
             , SUM(A.WAT_CNT_M) AS WAT_CNT_M_12
             , SUM(CASE WHEN A.STRD_YM BETWEEN '201502' AND '201507' THEN A.WAT_CNT_M
                        ELSE 0
                    END) AS WAT_CNT_M_6
             , SUM(CASE WHEN A.STRD_YM BETWEEN '201505' AND '201507' THEN A.WAT_CNT_M
                        ELSE 0
                    END) AS WAT_CNT_M_3 
          FROM CT_MBL_VOD_WAT_PRST_MONTH A
          JOIN CT_CNTNTS_MST PARTITION (PT_20150731) B
            ON A.CNTNTS_BAS_ID = B.CNTNTS_BAS_ID
         WHERE STRD_YM BETWEEN '201408' AND '201507'
         GROUP BY A.MBL_CUST_NUM
                , B.VCG_CD
       ) VOD
    ON SEG.MBL_CUST_NUM = VOD.MBL_CUST_NUM
  LEFT OUTER JOIN 
       (SELECT /*+ parallel(16) */ MBL_CUST_NUM
     , (CASE WHEN SEX_CD = 'M' THEN
             CASE WHEN AGE > 0   AND AGE < 20 THEN 'M0119'
                  WHEN AGE >= 20 AND AGE < 27 THEN 'M2026'
                  WHEN AGE >= 27 AND AGE < 32 THEN 'M2731'
                  WHEN AGE >= 32 AND AGE < 34 THEN 'M3233'
                  WHEN AGE >= 34 AND AGE < 40 THEN 'M3439'
                  WHEN AGE >= 40 AND AGE < 46 THEN 'M4045'
                  WHEN AGE >= 46 AND AGE < 49 THEN 'M4648'
                  WHEN AGE >= 49 AND AGE < 52 THEN 'M4951'
                  WHEN AGE >= 52 AND AGE < 63 THEN 'M5262'
                  WHEN AGE >= 63 AND AGE < 74 THEN 'M6373'
                  WHEN AGE >= 74                  THEN 'M7400'
                  ELSE '#'
              END
             WHEN SEX_CD = 'F' THEN
             CASE WHEN AGE > 0   AND AGE < 20 THEN 'F0119'
                  WHEN AGE >= 20 AND AGE < 25 THEN 'F2024'
                  WHEN AGE >= 25 AND AGE < 29 THEN 'F2528'
                  WHEN AGE >= 29 AND AGE < 32 THEN 'F2931'
                  WHEN AGE >= 32 AND AGE < 38 THEN 'F3237'
                  WHEN AGE >= 38 AND AGE < 44 THEN 'F3843'
                  WHEN AGE >= 44 AND AGE < 47 THEN 'F4446'
                  WHEN AGE >= 47 AND AGE < 50 THEN 'F4749'
                  WHEN AGE >= 50 AND AGE < 60 THEN 'F5059'
                  WHEN AGE >= 60 AND AGE < 70 THEN 'F6069'
                  WHEN AGE >= 70                  THEN 'F7000'
                  ELSE '#'
              END
             ELSE '#'
         END)   AS CUST_LIFESTG_CL_CD    -- 고객Life-stage구분코드
  FROM CC_MBL_CUST_SVC_PRST_MONTH
 WHERE STRD_YM = '201507'
 ) B
 ON SEG.MBL_CUST_NUM = B.MBL_CUST_NUM;
;



SELECT CUST_LIFESTG_CL_CD
     , (SELECT CUST_LIFESTG_CL_NM FROM VM_CUST_LIFESTG_CL AA WHERE A.CUST_LIFESTG_CL_CD = AA.CUST_LIFESTG_CL_CD) AS CUST_LIFESTG_CL_NM
     , COUNT(*) 
  FROM BK_MJ_MBL_VOD_CNT_1 A
GROUP BY CUST_LIFESTG_CL_CD;

-- 7119587
SELECT COUNT(DISTINCT MBL_CUST_NUM) FROM BK_YS_MBL_CUST_SEG;

-- 7119587
SELECT COUNT(DISTINCT MBL_CUST_NUM) FROM BK_MJ_MBL_VOD_CNT_1;

-- 7119587
SELECT COUNT(DISTINCT MBL_CUST_NUM) FROM BK_MJ_MBL_RLTM_CNT_1;

SELECT CUST_LIFESTG_CL_CD
     , (SELECT CUST_LIFESTG_CL_NM FROM VM_CUST_LIFESTG_CL AA WHERE A.CUST_LIFESTG_CL_CD = AA.CUST_LIFESTG_CL_CD) AS CUST_LIFESTG_CL_NM
     , (SELECT VCG_LVL1_CD_NM FROM CT_VCG_MST AA WHERE AA.VCG_CD = A.RM6_TOP1_PREFR_VCG_CD) AS VCG_LVL1_CD_NM
     , (SELECT VCG_LVL1_CD_NM FROM CT_VCG_MST AA WHERE AA.VCG_CD = A.RM6_TOP2_PREFR_VCG_CD) AS VCG_LVL2_CD_NM
     , (SELECT VCG_LVL1_CD_NM FROM CT_VCG_MST AA WHERE AA.VCG_CD = A.RM6_TOP3_PREFR_VCG_CD) AS VCG_LVL3_CD_NM
  FROM CT_VOD_WAT_GRP_PREFR_ANALS A
 WHERE STRD_YM = '201507'
 ORDER BY CUST_LIFESTG_CL_CD;

SELECT * FROM CT_VCG_MST;

SELECT CUST_LIFESTG_CL_CD
     , (SELECT CUST_LIFESTG_CL_NM FROM VM_CUST_LIFESTG_CL AA WHERE A.CUST_LIFESTG_CL_CD = AA.CUST_LIFESTG_CL_CD) AS CUST_LIFESTG_CL_NM
     , COUNT(DISTINCT CUST_NUM) 
  FROM CC_CUST_PRST_MONTH A
 WHERE STRD_YM = '201507'
GROUP BY CUST_LIFESTG_CL_CD;

SELECT * FROM
(
SELECT CUST_LIFESTG_CL_CD
     , CUST_LIFESTG_CL_NM
     , CTG_CL_NM
     , ROW_NUMBER () OVER (PARTITION BY CUST_LIFESTG_CL_NM ORDER BY WAT_CNT_M DESC) RNK_MBL
     , WAT_CNT_M
FROM (
SELECT CUST_LIFESTG_CL_CD
     , (SELECT CUST_LIFESTG_CL_NM FROM VM_CUST_LIFESTG_CL AA WHERE A.CUST_LIFESTG_CL_CD = AA.CUST_LIFESTG_CL_CD) AS CUST_LIFESTG_CL_NM
     , CTG_CL_CD
     , (SELECT CTG_CL_NM FROM VM_CTG_CL AA WHERE A.CTG_CL_CD = AA.CTG_CL_CD) AS CTG_CL_NM
     --, COUNT(DISTINCT MBL_CUST_NUM) AS MBL_CNT
     , SUM(WAT_CNT_M_6) AS WAT_CNT_M
  FROM BK_MJ_MBL_VOD_CNT_1 A
 GROUP BY CUST_LIFESTG_CL_CD
        , CTG_CL_CD
)
WHERE CTG_CL_NM IS NOT NULL
)
WHERE RNK_MBL < 6
ORDER BY CUST_LIFESTG_CL_CD, RNK_MBL
;

DESC BK_MJ_MBL_VOD_CNT_1;
DESC BK_MJ_MBL_RLTM_CNT_1;


SELECT * FROM BK_MJ_MBL_VOD_CNT_1 WHERE WAT_CNT_M_12 IS NULL;

SELECT COUNT(*) FROM BK_MJ_MBL_VOD_CNT_1;
SELECT * FROM BK_MJ_MBL_VOD_CNT_1;
SELECT COUNT(*) FROM BK_MJ_MBL_RLTM_CNT_1;
SELECT * FROM BK_MJ_MBL_RLTM_CNT_1;

CREATE TABLE BK_MJ_MBL_RLTM_CNT_1 AS
SELECT 
A.MBL_CUST_NUM
,B.CUST_LIFESTG_CL_CD
,A.MBL_CHNL_CD
,A.WAT_CNT_M_12
,A.WAT_CNT_M_6
,A.WAT_CNT_M_3
  FROM BK_MJ_MBL_RLTM_CNT A
  LEFT OUTER JOIN 
       (SELECT /*+ parallel(16) */ MBL_CUST_NUM
     , (CASE WHEN SEX_CD = 'M' THEN
             CASE WHEN AGE > 0   AND AGE < 20 THEN 'M0119'
                  WHEN AGE >= 20 AND AGE < 27 THEN 'M2026'
                  WHEN AGE >= 27 AND AGE < 32 THEN 'M2731'
                  WHEN AGE >= 32 AND AGE < 34 THEN 'M3233'
                  WHEN AGE >= 34 AND AGE < 40 THEN 'M3439'
                  WHEN AGE >= 40 AND AGE < 46 THEN 'M4045'
                  WHEN AGE >= 46 AND AGE < 49 THEN 'M4648'
                  WHEN AGE >= 49 AND AGE < 52 THEN 'M4951'
                  WHEN AGE >= 52 AND AGE < 63 THEN 'M5262'
                  WHEN AGE >= 63 AND AGE < 74 THEN 'M6373'
                  WHEN AGE >= 74                  THEN 'M7400'
                  ELSE '#'
              END
             WHEN SEX_CD = 'F' THEN
             CASE WHEN AGE > 0   AND AGE < 20 THEN 'F0119'
                  WHEN AGE >= 20 AND AGE < 25 THEN 'F2024'
                  WHEN AGE >= 25 AND AGE < 29 THEN 'F2528'
                  WHEN AGE >= 29 AND AGE < 32 THEN 'F2931'
                  WHEN AGE >= 32 AND AGE < 38 THEN 'F3237'
                  WHEN AGE >= 38 AND AGE < 44 THEN 'F3843'
                  WHEN AGE >= 44 AND AGE < 47 THEN 'F4446'
                  WHEN AGE >= 47 AND AGE < 50 THEN 'F4749'
                  WHEN AGE >= 50 AND AGE < 60 THEN 'F5059'
                  WHEN AGE >= 60 AND AGE < 70 THEN 'F6069'
                  WHEN AGE >= 70                  THEN 'F7000'
                  ELSE '#'
              END
             ELSE '#'
         END)   AS CUST_LIFESTG_CL_CD    -- 고객Life-stage구분코드
  FROM CC_MBL_CUST_SVC_PRST_MONTH
 WHERE STRD_YM = '201507'
 ) B
 ON A.MBL_CUST_NUM = B.MBL_CUST_NUM;

ALTER TABLE MDWUSER.BK_MJ_MBL_VOD_CNT 
DROP COLUMN CUST_LIFESTG_CL_CD;

ALTER TABLE MDWUSER.BK_MJ_MBL_RLTM_CNT 
DROP COLUMN CUST_LIFESTG_CL_CD;
(
	CUST_LIFESTG_CL_CD   VARCHAR2 (10) NULL
) ;



SELECT * FROM BK_MJ_MBL_VOD_CNT;
SELECT * FROM BK_MJ_MBL_RLTM_CNT;

CREATE TABLE BK_MJ_MBL_VOD_CNT AS
SELECT SEG.MBL_CUST_NUM
     , VOD.CTG_CL_CD
     , VOD.WAT_CNT_M_12
     , VOD.WAT_CNT_M_6
     , VOD.WAT_CNT_M_3
  FROM BK_YS_MBL_CUST_SEG SEG
  LEFT OUTER JOIN 
       (SELECT MBL_CUST_NUM
             , CTG_CL_CD
             , SUM(WAT_CNT_M) AS WAT_CNT_M_12
             , SUM(CASE WHEN STRD_YM BETWEEN '201502' AND '201507' THEN WAT_CNT_M
                        ELSE 0
                    END) AS WAT_CNT_M_6
             , SUM(CASE WHEN STRD_YM BETWEEN '201505' AND '201507' THEN WAT_CNT_M
                        ELSE 0
                    END) AS WAT_CNT_M_3 
          FROM CT_MBL_VOD_WAT_PRST_MONTH
         WHERE STRD_YM BETWEEN '201408' AND '201507'
         GROUP BY MBL_CUST_NUM
                , CTG_CL_CD
       ) VOD
    ON SEG.MBL_CUST_NUM = VOD.MBL_CUST_NUM
;

ALTER SESSION SET DB_FILE_MULTIBLOCK_READ_COUNT =128;
MERGE INTO BK_MJ_MBL_VOD_CNT A
USING (
 SELECT /*+ parallel(16) */ MBL_CUST_NUM
      , CTG_CL_CD
      , COUNT(DISTINCT CNTNTS_BAS_ID) AS CNT
   FROM CT_MBL_VOD_WAT_PRST_MONTH
  WHERE STRD_YM BETWEEN '201408' AND '201507'
  GROUP BY MBL_CUST_NUM
         , CTG_CL_CD) TMP
   ON (A.MBL_CUST_NUM = TMP.MBL_CUST_NUM AND A.CTG_CL_CD = TMP.CTG_CL_CD)
 WHEN MATCHED THEN
 UPDATE SET A.CNTNTS_CNT_12 = TMP.CNT;

MERGE INTO BK_MJ_MBL_VOD_CNT A
USING (
 SELECT /*+ parallel(16) */ MBL_CUST_NUM
      , CTG_CL_CD
      , COUNT(DISTINCT CNTNTS_BAS_ID) AS CNT
   FROM CT_MBL_VOD_WAT_PRST_MONTH
  WHERE STRD_YM BETWEEN '201502' AND '201507'
  GROUP BY MBL_CUST_NUM
         , CTG_CL_CD) TMP
   ON (A.MBL_CUST_NUM = TMP.MBL_CUST_NUM AND A.CTG_CL_CD = TMP.CTG_CL_CD)
 WHEN MATCHED THEN
 UPDATE SET A.CNTNTS_CNT_6 = TMP.CNT;

MERGE INTO BK_MJ_MBL_VOD_CNT A
USING (
 SELECT /*+ parallel(16) */ MBL_CUST_NUM
      , CTG_CL_CD
      , COUNT(DISTINCT CNTNTS_BAS_ID) AS CNT
   FROM CT_MBL_VOD_WAT_PRST_MONTH
  WHERE STRD_YM BETWEEN '201505' AND '201507'
  GROUP BY MBL_CUST_NUM
         , CTG_CL_CD) TMP
   ON (A.MBL_CUST_NUM = TMP.MBL_CUST_NUM AND A.CTG_CL_CD = TMP.CTG_CL_CD)
 WHEN MATCHED THEN
 UPDATE SET A.CNTNTS_CNT_3 = TMP.CNT;

SELECT * FROM BK_MJ_MBL_VOD_CNT WHERE MBL_CUST_NUM = 'U000318006';
SELECT * FROM CT_MBL_VOD_WAT_PRST_MONTH WHERE STRD_YM BETWEEN '201408' AND '201507' AND MBL_CUST_NUM = 'U001782206';
SELECT * FROM CT_MBL_VOD_WAT_PRST_DAY WHERE STRD_DT LIKE '201408%' AND MBL_CUST_NUM = 'U001782206';


--------------------------------------------
SELECT * FROM CC_MBL_CUST_SVC_PRST_DAY PARTITION (PT_20150826) WHERE USR_ID = 'green978';
SELECT * FROM CC_MBL_CUST_SVC_PRST_DAY PARTITION (PT_20150826) WHERE USR_ID = 't01099811085';
SELECT * FROM CC_MBL_CUST_SVC_PRST_DAY PARTITION (PT_20150826) WHERE USR_ID = 'nobleman1981';

1. 기본월정액 (3천원 181)
2. 기타월정액(채널, VOD)
3. 단품 - BUY_AMT > 0, =0 (쿠폰/포인트)
4. 시리즈
;


1. 

;
-- 20140202
SELECT *
  FROM CT_MBL_CNTNTS_BUY_DTL 
 -- WHERE STRD_DT LIKE '201507%' 
   WHERE MBL_CUST_NUM = 'U002449530'
;

-- 20140617
SELECT *
  FROM CT_MBL_CNTNTS_BUY_DTL 
 -- WHERE STRD_DT LIKE '201507%' 
   WHERE MBL_CUST_NUM = 'U004041224'
;

-- 없음
SELECT *
  FROM CT_MBL_CNTNTS_BUY_DTL 
 -- WHERE STRD_DT LIKE '201507%' 
   WHERE MBL_CUST_NUM = 'U007835710'
;

SELECT *
  FROM CT_MBL_CNTNTS_BUY_DTL 
 -- WHERE STRD_DT LIKE '201507%' 
   WHERE MBL_CUST_NUM = 'U000049200'
     -- AND STRD_DT LIKE '2015%'
;


SELECT MBL_CUST_NUM, COUNT(*)
  FROM CT_MBL_CNTNTS_BUY_DTL 
 WHERE MBL_PROD_TYP_CD = '181'
 GROUP BY MBL_CUST_NUM
 HAVING COUNT(*) > 1
;

SELECT * FROM BK_YS_MBL_CUST_SEG WHERE BUY_AMT > 0;


-- 4014723
SELECT COUNT(DISTINCT MBL_CUST_NUM)
  FROM CT_MBL_CNTNTS_BUY_DTL
 WHERE MBL_PROD_TYP_CD = '181';

SELECT MBL_CUST_NUM, SUM(PROD_PRC), SUM(BUY_AMT), SUM(DC_AMT)
  FROM CT_MBL_CNTNTS_BUY_DTL 
 WHERE STRD_DT LIKE '201507%' 
 GROUP BY MBL_CUST_NUM
;

SELECT * FROM PCS_MPURCHASE_TRN WHERE CLOS_DY = '#' AND PRD_TYP_CD = '181' AND PURC_STS_CD = '30';
SELECT * FROM PRD_TYP_CD;

-- 3415809
SELECT COUNT(DISTINCT MUSER_NUM) 
  FROM PCS_MPURCHASE_TRN 
 WHERE PRD_TYP_CD = '181' 
   AND MUSER_NUM LIKE 'U%'
   AND PURC_STS_CD = '30'
   AND PURC_TO_DY = '99991231'
   AND CLOS_DY = '#';


SELECT MBL_CUST_NUM
     , PURC_FR_DY
     , PURC_TO_DY
  FROM PCS_MPURCHASE_TRN 
 WHERE PRD_TYP_CD = '181' 
   AND MUSER_NUM LIKE 'U%'
;

SELECT MUSER_NUM
     , COUNT(*)
  FROM PCS_MPURCHASE_TRN 
 WHERE PRD_TYP_CD = '181' 
   AND MUSER_NUM LIKE 'U%'
   AND PURC_STS_CD = '30'
 GROUP BY MUSER_NUM
 HAVING COUNT(*) > 1;

SELECT * FROM PCS_MPURCHASE_TRN WHERE PRD_TYP_CD='181' AND MUSER_NUM = 'U003547763';

MERGE INTO BK_YS_MBL_CUST_SEG SEG
USING (SELECT MUSER_NUM
     , MAX(PURC_FR_DY) AS PURC_FR_DY
     , MAX(PURC_TO_DY) AS PURC_TO_DY
  FROM PCS_MPURCHASE_TRN 
 WHERE PRD_TYP_CD = '181' 
   AND MUSER_NUM LIKE 'U%'
   AND PURC_STS_CD = '30'
 GROUP BY MUSER_NUM) TMP
   ON (SEG.MBL_CUST_NUM = TMP.MUSER_NUM)
 WHEN MATCHED THEN
 UPDATE SET SEG.PPM_YN = 'Y',
            SEG.PPM_SCRB_DT = TMP.PURC_FR_DY,
            SEG.PPM_TERM_DT = TMP.PURC_TO_DY
-- WHEN NOT MATCHED THEN 
-- UPDATE SET SEG.PPM_YN = 'N',
--            SEG.PPM_SCRB_DT = '#',
--            SEG.PPM_TERM_DT = '#'
;

COMMIT;

-- 7111738
SELECT COUNT(DISTINCT MBL_CUST_NUM) 
  FROM CC_MBL_CUST_SVC_PRST_MONTH
 WHERE STRD_YM = '201507'
   AND SVC_ST_CD = 'AC'
;

--Btv Mobile 무료회원 (T9_BTV)	211284
--Btv Mobile 유료회원 (T9_Charged)	153724
--Btv Mobile 무료회원 (T9_Free)	3830589
--Btv Mobile 무료회원 (T9_T/F)	2920114
SELECT (SELECT PYFR_MBR_CL_NM FROM VM_PYFR_MBR_CL AA WHERE AA.PYFR_MBR_CL_CD = A.PYFR_MBR_CL_CD) AS CUSTGRP_CL_NM
     , COUNT(DISTINCT MBL_CUST_NUM) 
  FROM CC_MBL_CUST_SVC_PRST_MONTH A
 WHERE STRD_YM = '201507'
   AND SVC_ST_CD = 'AC'
 GROUP BY PYFR_MBR_CL_CD
;

-- 318205
SELECT COUNT(DISTINCT MBL_CUST_NUM) 
  FROM CT_MBL_VOD_WAT_PRST_MONTH PARTITION (PT_201507);

-- 245872
SELECT COUNT(DISTINCT MBL_CUST_NUM)
  FROM CT_MBL_CNTNTS_BUY_DTL
 WHERE STRD_DT LIKE '201507%';
 
--C	43001
--F	202871
SELECT (CASE WHEN BUY_AMT > 0 THEN 'C'
             ELSE 'F'
        END) AS "CF"
     , COUNT(MBL_CUST_NUM) AS CNT
  FROM (
        SELECT MBL_CUST_NUM, SUM(BUY_AMT) AS BUY_AMT
          FROM CT_MBL_CNTNTS_BUY_DTL
         WHERE STRD_DT LIKE '201507%'
         GROUP BY MBL_CUST_NUM
       ) A
 GROUP BY (CASE WHEN BUY_AMT > 0 THEN 'C'
             ELSE 'F'
        END) 
;

--3군
--C	41896
--F	4
SELECT (CASE WHEN BUY_AMT > 0 THEN 'C'
             ELSE 'F'
        END) AS "CF"
     , COUNT(MBL_CUST_NUM) AS CNT
  FROM (
        SELECT MBL_CUST_NUM, SUM(BUY_AMT) AS BUY_AMT
          FROM CT_MBL_BUY_FIX_DTL
         WHERE STRD_YM = '201507'
           AND BUY_CNCL_YN != 'Y'
         GROUP BY MBL_CUST_NUM
       ) A
 GROUP BY (CASE WHEN BUY_AMT > 0 THEN 'C'
             ELSE 'F'
        END) 
;

--단품	38665
--PPS	712
--VOD 월정액	4185
--채널(실시간) 월정액	1841
--월정액	205101
SELECT (SELECT MBL_PROD_TYP_NM FROM VM_MBL_PROD_TYP AA WHERE AA.MBL_PROD_TYP_CD = A.MBL_PROD_TYP_CD) AS MBL_PROD_TYP_NM
     , COUNT(DISTINCT MBL_CUST_NUM)
  FROM CT_MBL_CNTNTS_BUY_DTL A
 WHERE STRD_DT LIKE '201507%'
 GROUP BY MBL_PROD_TYP_CD
 ORDER BY MBL_PROD_TYP_CD
;

SELECT * FROM BK_YS_MBL_CUST_SEG;

SELECT * FROM BK_MBL_CUST_SEG_20150909;

SELECT * FROM CT_MBL_CNTNTS_BUY_DTL;

SELECT * FROM VM_MBL_PROD_TYP;

--DROP TABLE BK_MBL_CUST_SEG_20150909;

SELECT (SELECT PYFR_MBR_CL_NM FROM VM_PYFR_MBR_CL A WHERE A.PYFR_MBR_CL_CD= AA.PYFR_MBR_CL_CD) AS PYFR_MBR_CL_NM
, COUNT(*)
FROM CC_MBL_CUST_SVC_PRST_MONTH AA
WHERE STRD_YM = '201508'
GROUP BY PYFR_MBR_CL_CD
;

ALTER SESSION SET DB_FILE_MULTIBLOCK_READ_COUNT =128;
CREATE TABLE BK_MBL_CUST_SEG_20150914_2
AS
SELECT /*+ parallel(16) */
       A.MBL_CUST_NUM AS "모바일고객번호"
     , SEX_CD AS "성별"
     , AGE AS "나이"
     , (CASE WHEN SEX_CD = 'M' THEN
             CASE WHEN AGE > 0   AND AGE < 20 THEN 'M0119'
                  WHEN AGE >= 20 AND AGE < 27 THEN 'M2026'
                  WHEN AGE >= 27 AND AGE < 32 THEN 'M2731'
                  WHEN AGE >= 32 AND AGE < 34 THEN 'M3233'
                  WHEN AGE >= 34 AND AGE < 40 THEN 'M3439'
                  WHEN AGE >= 40 AND AGE < 46 THEN 'M4045'
                  WHEN AGE >= 46 AND AGE < 49 THEN 'M4648'
                  WHEN AGE >= 49 AND AGE < 52 THEN 'M4951'
                  WHEN AGE >= 52 AND AGE < 63 THEN 'M5262'
                  WHEN AGE >= 63 AND AGE < 74 THEN 'M6373'
                  WHEN AGE >= 74                  THEN 'M7400'
                  ELSE '#'
              END
             WHEN SEX_CD = 'F' THEN
             CASE WHEN AGE > 0   AND AGE < 20 THEN 'F0119'
                  WHEN AGE >= 20 AND AGE < 25 THEN 'F2024'
                  WHEN AGE >= 25 AND AGE < 29 THEN 'F2528'
                  WHEN AGE >= 29 AND AGE < 32 THEN 'F2931'
                  WHEN AGE >= 32 AND AGE < 38 THEN 'F3237'
                  WHEN AGE >= 38 AND AGE < 44 THEN 'F3843'
                  WHEN AGE >= 44 AND AGE < 47 THEN 'F4446'
                  WHEN AGE >= 47 AND AGE < 50 THEN 'F4749'
                  WHEN AGE >= 50 AND AGE < 60 THEN 'F5059'
                  WHEN AGE >= 60 AND AGE < 70 THEN 'F6069'
                  WHEN AGE >= 70                  THEN 'F7000'
                  ELSE '#'
              END
             ELSE '#'
         END)   AS "고객Life-stage구분코드"
     , SVC_SCRB_DT AS "가입일자"
     , SVC_TERM_DT AS "해지일자"
     , MBL_SCRB_PASSMTH_CNT AS "모바일가입경과개월수"
     , PAY_SCRB_PASSMTH_CNT AS "월정액가입경과개월수"
     , B."1년구매_개월수"
     , B."1년_상품가격"
     , B."1년_할인가격"
     , B."1년_구매가격"
     , B."1년_구매컨텐츠수"
--     , B."6개월구매_개월수"
--     , B."6개월_상품가격"
--     , B."6개월_할인가격"
--     , B."6개월_구매가격"
--     , B."6개월_구매컨텐츠수"
--     , B."3개월구매_개월수"
--     , B."3개월_상품가격"
--     , B."3개월_할인가격"
--     , B."3개월_구매가격"
--     , B."3개월_구매컨텐츠수"
     , CASE WHEN B."1년_단품여부" > 0 THEN 'Y' ELSE 'N' END AS "1년_단품여부"
     , CASE WHEN B."1년_PPS여부" > 0 THEN 'Y' ELSE 'N' END AS "1년_PPS여부"
     , CASE WHEN B."1년_VOD월정액여부" > 0 THEN 'Y' ELSE 'N' END AS "1년_VOD월정액여부"
     , CASE WHEN B."1년_실시간월정액여부" > 0 THEN 'Y' ELSE 'N' END AS "1년_실시간월정액여부"
     , CASE WHEN B."1년_기본월정액여부" > 0 THEN 'Y' ELSE 'N' END AS "1년_기본월정액여부"
     , C."1년VOD_개월수"
     , C."1년VOD_건수"
     , C."1년VOD_일수"
     , C."1년VOD_컨텐츠수"
--     , C."6개월VOD_건수"
--     , C."6개월VOD_일수"
--     , C."6개월VOD_컨텐츠수"
--     , C."3개월VOD_건수"
--     , C."3개월VOD_일수"
--     , C."3개월VOD_컨텐츠수"
     , D."1년실시간_개월수"
     , D."1년실시간_건수"
     , D."1년실시간_일수"
     , D."1년실시간_채널수"
--     , D."6개월실시간_건수"
--     , D."6개월실시간_일수"
--     , D."6개월실시간_채널수"
--     , D."3개월실시간_건수"
--     , D."3개월실시간_일수"
--     , D."3개월실시간_채널수"
  FROM CC_MBL_CUST_SVC_PRST_MONTH PARTITION (PT_201508) A
  LEFT OUTER JOIN 
       (SELECT /*+ parallel(16) */ MBL_CUST_NUM
             , COUNT(DISTINCT SUBSTR(STRD_DT, 1, 6)) AS "1년구매_개월수"
             , SUM(PROD_PRC) AS "1년_상품가격"
             , SUM(DC_AMT) AS "1년_할인가격"
             , SUM(BUY_AMT) AS "1년_구매가격"
             , COUNT(CNTNTS_BAS_ID) AS "1년_구매컨텐츠수"
             , SUM(CASE WHEN STRD_DT BETWEEN '20150301' AND '20150831' THEN PROD_PRC ELSE 0 END) AS "6개월_상품가격"
             , SUM(CASE WHEN STRD_DT BETWEEN '20150301' AND '20150831' THEN DC_AMT ELSE 0 END) AS "6개월_할인가격"
             , SUM(CASE WHEN STRD_DT BETWEEN '20150301' AND '20150831' THEN BUY_AMT ELSE 0 END) AS "6개월_구매가격"
             , COUNT(CASE WHEN STRD_DT BETWEEN '20150301' AND '20150831' THEN CNTNTS_BAS_ID ELSE NULL END) AS "6개월_구매컨텐츠수"
             , SUM(CASE WHEN STRD_DT BETWEEN '20150601' AND '20150831' THEN PROD_PRC ELSE 0 END) AS "3개월_상품가격"
             , SUM(CASE WHEN STRD_DT BETWEEN '20150601' AND '20150831' THEN DC_AMT ELSE 0 END) AS "3개월_할인가격"
             , SUM(CASE WHEN STRD_DT BETWEEN '20150601' AND '20150831' THEN BUY_AMT ELSE 0 END) AS "3개월_구매가격"
             , COUNT(CASE WHEN STRD_DT BETWEEN '20150601' AND '20150831' THEN CNTNTS_BAS_ID ELSE NULL END) AS "3개월_구매컨텐츠수"
             , SUM(CASE WHEN STRD_DT BETWEEN '20140901' AND '20150831' 
                         AND MBL_PROD_TYP_CD = '110' THEN 1 ELSE 0 END) AS "1년_단품여부"
             , SUM(CASE WHEN STRD_DT BETWEEN '20140901' AND '20150831' 
                         AND MBL_PROD_TYP_CD = '120' THEN 1 ELSE 0 END) AS "1년_PPS여부"
             , SUM(CASE WHEN STRD_DT BETWEEN '20140901' AND '20150831' 
                         AND MBL_PROD_TYP_CD = '130' THEN 1 ELSE 0 END) AS "1년_VOD월정액여부"
             , SUM(CASE WHEN STRD_DT BETWEEN '20140901' AND '20150831' 
                         AND MBL_PROD_TYP_CD = '180' THEN 1 ELSE 0 END) AS "1년_실시간월정액여부"
             , SUM(CASE WHEN STRD_DT BETWEEN '20140901' AND '20150831' 
                         AND MBL_PROD_TYP_CD = '181' THEN 1 ELSE 0 END) AS "1년_기본월정액여부"
  FROM CT_MBL_CNTNTS_BUY_DTL
         WHERE STRD_DT BETWEEN '20140901' AND '20150831'
         GROUP BY MBL_CUST_NUM
       ) B
    ON A.MBL_CUST_NUM = B.MBL_CUST_NUM 
  LEFT OUTER JOIN
       (SELECT /*+ parallel(16) */ MBL_CUST_NUM
             , COUNT(DISTINCT STRD_YM) AS "1년VOD_개월수"
             , SUM(WAT_CNT_M) AS "1년VOD_건수"
             , SUM(WAT_DAY_CNT_M) AS "1년VOD_일수"
             , COUNT(CNTNTS_BAS_ID) AS "1년VOD_컨텐츠수"
             , SUM(CASE WHEN STRD_YM BETWEEN '201503' AND '201508' THEN WAT_CNT_M ELSE 0 END) AS "6개월VOD_건수"
             , SUM(CASE WHEN STRD_YM BETWEEN '201503' AND '201508' THEN WAT_DAY_CNT_M ELSE 0 END) AS "6개월VOD_일수"
             , COUNT(CASE WHEN STRD_YM BETWEEN '201503' AND '201508' THEN CNTNTS_BAS_ID ELSE NULL END) AS "6개월VOD_컨텐츠수"
             , SUM(CASE WHEN STRD_YM BETWEEN '201506' AND '201508' THEN WAT_CNT_M ELSE 0 END) AS "3개월VOD_건수"
             , SUM(CASE WHEN STRD_YM BETWEEN '201506' AND '201508' THEN WAT_DAY_CNT_M ELSE 0 END) AS "3개월VOD_일수"
             , COUNT(CASE WHEN STRD_YM BETWEEN '201506' AND '201508' THEN CNTNTS_BAS_ID ELSE NULL END) AS "3개월VOD_컨텐츠수"
          FROM CT_MBL_VOD_WAT_PRST_MONTH
         WHERE STRD_YM BETWEEN '201409' AND '201508'
         GROUP BY MBL_CUST_NUM
       ) C
    ON A.MBL_CUST_NUM = C.MBL_CUST_NUM
  LEFT OUTER JOIN
       (SELECT /*+ parallel(16) */ MBL_CUST_NUM
             , COUNT(DISTINCT STRD_YM) AS "1년실시간_개월수"
             , SUM(WAT_CNT_M) AS "1년실시간_건수"
             , SUM(WAT_DAY_CNT_M) AS "1년실시간_일수"
             , COUNT(MBL_CHNL_CD) AS "1년실시간_채널수"
             , SUM(CASE WHEN STRD_YM BETWEEN '201503' AND '201508' THEN WAT_CNT_M ELSE 0 END) AS "6개월실시간_건수"
             , SUM(CASE WHEN STRD_YM BETWEEN '201503' AND '201508' THEN WAT_DAY_CNT_M ELSE 0 END) AS "6개월실시간_일수"
             , COUNT(CASE WHEN STRD_YM BETWEEN '201503' AND '201508' THEN MBL_CHNL_CD ELSE NULL END) AS "6개월실시간_채널수"
             , SUM(CASE WHEN STRD_YM BETWEEN '201506' AND '201508' THEN WAT_CNT_M ELSE 0 END) AS "3개월실시간_건수"
             , SUM(CASE WHEN STRD_YM BETWEEN '201506' AND '201508' THEN WAT_DAY_CNT_M ELSE 0 END) AS "3개월실시간_일수"
             , COUNT(CASE WHEN STRD_YM BETWEEN '201506' AND '201508' THEN MBL_CHNL_CD ELSE NULL END) AS "3개월실시간_채널수"
          FROM CT_MBL_RLTMWAT_PRST_MONTH
         WHERE STRD_YM BETWEEN '201409' AND '201508'
         GROUP BY MBL_CUST_NUM
       ) D
    ON A.MBL_CUST_NUM = D.MBL_CUST_NUM
;

SELECT * FROM VM_MBL_PROD_TYP;

SELECT * FROM VM_CASH_BUY_TYP;

SELECT (CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END) AS "1년_실구매경험여부"
     , COUNT(*)
  FROM BK_MBL_CUST_SEG_20150909
 GROUP BY (CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END)
;

SELECT * FROM BK_MBL_CUST_SEG_20150909
WHERE "1년_구매가격" > 0; 

SELECT * FROM BK_MBL_CUST_SEG_20150914;
SELECT COUNT(*) FROM BK_MBL_CUST_SEG_20150914;
SELECT COUNT(*) FROM BK_MBL_CUST_SEG_20150914_1;
SELECT COUNT(*) FROM BK_MBL_CUST_SEG_20150914_2;

DELETE /*+ parallel(16) */ FROM BK_MBL_CUST_SEG_20150914 WHERE "3개월구매_개월수" IS NULL;
COMMIT;
DELETE /*+ parallel(16) */ FROM BK_MBL_CUST_SEG_20150914_1 WHERE "6개월구매_개월수" IS NULL;
COMMIT;
DELETE /*+ parallel(16) */ FROM BK_MBL_CUST_SEG_20150914_2 WHERE "1년구매_개월수" IS NULL;
COMMIT;

DESC BK_MBL_CUST_SEG_20150914_2;
DESC BK_MBL_CUST_SEG_20150914_1;
DESC BK_MBL_CUST_SEG_20150914;

SELECT CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END AS "월정액가입여부"
     , CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END AS "1년유무료여부"
     , CASE WHEN "1년VOD_건수" > 0 THEN 'Y' ELSE 'N' END AS "1년VOD시청"
     , CASE WHEN "1년실시간_건수" > 0 THEN 'Y' ELSE 'N' END AS "1년실시간시청"
     , COUNT(*)
  FROM BK_MBL_CUST_SEG_20150909
 GROUP BY CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년실시간_건수" > 0 THEN 'Y' ELSE 'N' END
 ORDER BY CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년실시간_건수" > 0 THEN 'Y' ELSE 'N' END
;


SELECT "1년_기본월정액여부"
     , CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END AS "1년유무료여부"
     , CASE WHEN "1년VOD_건수" > 0 THEN 'Y' ELSE 'N' END AS "1년VOD시청"
     , CASE WHEN "1년실시간_건수" > 0 THEN 'Y' ELSE 'N' END AS "1년실시간시청"
     , COUNT(*)
  FROM BK_MBL_CUST_SEG_20150914_2
 GROUP BY "1년_기본월정액여부"
     , CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년실시간_건수" > 0 THEN 'Y' ELSE 'N' END
 ORDER BY "1년_기본월정액여부"
     , CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년실시간_건수" > 0 THEN 'Y' ELSE 'N' END
;

SELECT CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END AS "현재월정액가입여부"
     , CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END AS "1년유무료여부"
     , CASE WHEN "1년VOD_건수" > 0 THEN 'Y' ELSE 'N' END AS "1년VOD시청"
     , CASE WHEN "1년실시간_건수" > 0 THEN 'Y' ELSE 'N' END AS "1년실시간시청"
     , COUNT(*)
  FROM BK_MBL_CUST_SEG_20150914_2
 GROUP BY CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년실시간_건수" > 0 THEN 'Y' ELSE 'N' END
 ORDER BY CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "1년실시간_건수" > 0 THEN 'Y' ELSE 'N' END
;

SELECT "6개월_기본월정액여부"
     , CASE WHEN "6개월_구매가격" > 0 THEN 'Y' ELSE 'N' END AS "6개월유무료여부"
     , CASE WHEN "6개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END AS "6개월VOD시청"
     , CASE WHEN "6개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END AS "6개월실시간시청"
     , COUNT(*)
  FROM BK_MBL_CUST_SEG_20150914_1
 GROUP BY "6개월_기본월정액여부"
     , CASE WHEN "6개월_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "6개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "6개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END
 ORDER BY "6개월_기본월정액여부"
     , CASE WHEN "6개월_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "6개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "6개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END
;

SELECT CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END AS "현재월정액가입여부"
     , CASE WHEN "6개월_구매가격" > 0 THEN 'Y' ELSE 'N' END AS "6개월유무료여부"
     , CASE WHEN "6개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END AS "6개월VOD시청"
     , CASE WHEN "6개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END AS "6개월실시간시청"
     , COUNT(*)
  FROM BK_MBL_CUST_SEG_20150914_1
 GROUP BY CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "6개월_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "6개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "6개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END
 ORDER BY CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "6개월_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "6개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "6개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END
;

SELECT "3개월_기본월정액여부"
     , CASE WHEN "3개월_구매가격" > 0 THEN 'Y' ELSE 'N' END AS "3개월_유무료여부"
     , CASE WHEN "3개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END AS "3개월_VOD시청"
     , CASE WHEN "3개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END AS "3개월_실시간시청"
     , COUNT(*)
  FROM BK_MBL_CUST_SEG_20150914
 GROUP BY "3개월_기본월정액여부"
     , CASE WHEN "3개월_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "3개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "3개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END
 ORDER BY "3개월_기본월정액여부"
     , CASE WHEN "3개월_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "3개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "3개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END
;

SELECT CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END AS "현재월정액가입여부"
     , CASE WHEN "3개월_구매가격" > 0 THEN 'Y' ELSE 'N' END AS "3개월_유무료여부"
     , CASE WHEN "3개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END AS "3개월_VOD시청"
     , CASE WHEN "3개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END AS "3개월_실시간시청"
     , COUNT(*)
  FROM BK_MBL_CUST_SEG_20150914
 GROUP BY CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "3개월_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "3개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "3개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END
 ORDER BY CASE WHEN "월정액가입경과개월수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "3개월_구매가격" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "3개월VOD_건수" > 0 THEN 'Y' ELSE 'N' END
     , CASE WHEN "3개월실시간_건수" > 0 THEN 'Y' ELSE 'N' END
;